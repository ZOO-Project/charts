cwlVersion: v1.0
baseCommand: Stars
doc: "Run Stars for staging results"
class: CommandLineTool
hints:
  DockerRequirement:
    dockerPull: terradue/stars:2.3.1
id: stars
arguments:
  - copy
  - -v
  - -r
  - '4'
  - -o
  - $( inputs.STAGEOUT_OUTPUT + "/" + inputs.process )
  - -res
  - $( inputs.process + ".res" )
  - valueFrom: |
      ${
          if( !Array.isArray(inputs.wf_outputs) ) 
          {
              return inputs.wf_outputs.path + "/catalog.json";
          }
          var args=[];
          for (var i = 0; i < inputs.wf_outputs.length; i++) 
          {
              args.push(inputs.wf_outputs[i].path + "/catalog.json");
          }
          return args;
      }
inputs:
  AWS_PROFILE:
    type: string?
  AWS_SERVICE_URL:
    type: string?
  AWS_ACCESS_KEY_ID:
    type: string?
  AWS_SECRET_ACCESS_KEY:
    type: string?
  aws_profiles_location:
    type: File?
  STAGEOUT_OUTPUT:
    type: string?
  AWS_REGION:
    type: string?
  process:
    type: string?
outputs:
  s3_catalog_output:
    outputBinding:
      outputEval: ${ return inputs.STAGEOUT_OUTPUT + "/" + inputs.process + "/catalog.json"; }
    type: string
requirements:
  InlineJavascriptRequirement: {}
  EnvVarRequirement:
    envDef:
      PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      AWS__ServiceURL: $(inputs.AWS_SERVICE_URL)
      AWS__Region: $(inputs.AWS_REGION)
      AWS__AuthenticationRegion: $(inputs.AWS_REGION)
      AWS_ACCESS_KEY_ID: $(inputs.AWS_ACCESS_KEY_ID)
      AWS_SECRET_ACCESS_KEY: $(inputs.AWS_SECRET_ACCESS_KEY)
  ResourceRequirement: {}