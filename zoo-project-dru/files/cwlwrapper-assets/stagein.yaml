#!/usr/bin/env cwl-runner

cwlVersion: v1.0
class: CommandLineTool
id: stage
inputs: {}
outputs: {}
baseCommand:
  - python
  - stage.py
arguments:
  - $( inputs.input )
requirements:
  DockerRequirement:
    dockerPull: ghcr.io/terradue/ogc-eo-application-package-hands-on/stage:1.3.2
  EnvVarRequirement:
    envDef:
      A: "2"
  InlineJavascriptRequirement: {}
  InitialWorkDirRequirement:
    listing:
      - entryname: stage.py
        entry: "import pystac\nimport stac_asset\nimport asyncio\nimport os\nimport sys\n\nconfig = stac_asset.Config(warn=True)\n\nasync def main(href: str):\n    \n    item = pystac.read_file(href)\n    \n    os.makedirs(item.id, exist_ok=True)\n    cwd = os.getcwd()\n    \n    os.chdir(item.id)\n    item = await stac_asset.download_item(item=item, directory=\".\", config=config)\n    os.chdir(cwd)\n    \n    cat = pystac.Catalog(\n        id=\"catalog\",\n        description=f\"catalog with staged {item.id}\",\n        title=f\"catalog with staged {item.id}\",\n    )\n    cat.add_item(item)\n    \n    cat.normalize_hrefs(\"./\")\n    cat.save(catalog_type=pystac.CatalogType.SELF_CONTAINED)\n\n    return cat\n\nhref = sys.argv[1]\n\ncat = asyncio.run(main(href))"
