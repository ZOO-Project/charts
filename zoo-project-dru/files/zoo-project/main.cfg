{{- $hosturl := include "zoo-project-dru.hosturl" . -}}
{{- $customPrefixes := "" -}}
{{- range $k, $_ := .Values.customConfig.main -}}
{{- $customPrefixes = (print $customPrefixes "," $k) -}}
{{- end -}}
[main]
encoding = utf-8
version = 1.0.0
serverAddress = {{ $hosturl }}
language = en-US
lang = fr-FR,en-CA,en-US
tmpPath={{ .Values.persistence.tmpPath }}
tmpUrl = {{ $hosturl }}/temp/
mapserverAddress = {{ $hosturl }}/cgi-bin/mapserv
dataPath = /usr/com/zoo-project
cacheDir ={{ .Values.persistence.tmpPath }}
templatesPath = /var/www/
search_path=true
cors=true

[identification]
title = ZOO-Project with Deploy, Replace, Undeploy and CWL support
{{- if .Values.documentation.enabled }}
{{- if .Values.iam.enabled }}
abstract_file=/var/www/header-secured.md
{{- else }}
abstract_file=/var/www/header.md
{{- end }}
{{- else }}
abstract=ZOO-Project is a Web Processing Service (WPS) implementation that allows users to deploy, replace, and undeploy processes dynamically. It supports the Common Workflow Language (CWL) for process definitions and provides a flexible environment for geospatial data processing.
{{- end }}
fees = None
accessConstraints = none
keywords = WPS,GIS,buffer

[provider]
providerName=ZOO-Project
providerSite=http://www.zoo-project.org
individualName=Gerald FENOY
positionName=Developer
role=Dev
addressDeliveryPoint=1280, avenue des Platanes
addressCity=Lattes
addressAdministrativeArea=False
addressPostalCode=34970
addressCountry=fr
addressElectronicMailAddress=gerald.fenoy@geolabs.fr
phoneVoice=False
phoneFacsimile=False

[env]
CONTEXT_DOCUMENT_ROOT=/usr/lib/cgi-bin/
{{- range $k, $v := .Values.zookernel.env }}
{{ $k }}={{ $v }}
{{- end }}

[database]
dbname=zoo
port=5432
user=zoo
password=zoo
host={{ .Values.postgresql.serviceName }}
type=PG
schema=public

[metadb]
dbname=zoo
port=5432
user=zoo
password=zoo
host={{ .Values.postgresql.serviceName }}
type=PG
schema=public

[security]
attributes=Authorization,Cookie,User-Agent
hosts=*

[cookiecutter]
configurationFile={{ .Values.persistence.tmpPath }}/cookiecutter_config.yaml
templatesPath={{ .Values.persistence.tmpPath }}/cookiecutter-templates
templateUrl={{ .Values.cookiecutter.templateUrl }}
templateBranch={{ .Values.cookiecutter.templateBranch }}


[servicesNamespace]
path= {{ .Values.persistence.servicesNamespacePath }}
deploy_service_provider=DeployProcess
undeploy_service_provider=UndeployProcess
has_jwt_service=true
sections_list={{ print "auth_env,additional_parameters,pod_env_vars,pod_node_selector" $customPrefixes }}
required_files=
filterJobByUser=true

{{- if .Values.workflow.podAnnotations }}
[pod_annotations]
{{- range $k, $v := .Values.workflow.podAnnotations }}
{{ $k }}={{ $v }}
{{- end }}
{{- end }}

{{- if .Values.workflow.nodeSelector}}
[pod_node_selector]
{{- range $k, $v := .Values.workflow.nodeSelector }}
{{ $k }}={{ $v }}
{{- end }}
{{- end }}

{{- if .Values.workflow.additionalInputs}}
[additional_parameters]
{{- range $k, $v := .Values.workflow.additionalInputs }}
{{ $k }}={{ $v }}
{{- end }}
{{- end }}

{{- if .Values.workflow.env}}
[pod_env_vars]
{{- range $k, $v := .Values.workflow.env }}
{{ $k }}={{ $v }}
{{- end }}
{{- end }}

{{- range $k, $v := .Values.customConfig.main }}
{{ print "\n[" $k "]" }}
{{ $v }}
{{- end }}

[headers]
X-Powered-By=ZOO-Project-DRU
Access-Control-Allow-Origin=*
Access-Control-Allow-Methods=GET, POST, PUT, PATCH, OPTIONS, DELETE, HEAD
Access-Control-Allow-Headers=Content-Type, Accept, Authorization, Origin, Prefer, Link, Location, GDC-Identifier
Access-Control-Allow-Credentials=true

[rabbitmq]
host={{ .Release.Name }}-rabbitmq
port=5672
user={{ .Values.rabbitmq.auth.username }}
passwd={{ .Values.rabbitmq.auth.password }}
exchange=main_exchange
routingkey=zoo
queue=zoo_service_queue

[server]
async_worker=10
