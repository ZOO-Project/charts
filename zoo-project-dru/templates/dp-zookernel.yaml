apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-zookernel
  labels:
    {{- include "zoo-project-dru.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "zoo-project-dru.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
        checksum/cm-cwlwrapper-assets: {{ include (print .Template.BasePath "/cm-cwlwrapper-assets.yaml") . | sha256sum }}
        checksum/cm-zoo-deploy-service-config: {{ include (print .Template.BasePath "/cm-zoo-deploy-service-config.yaml") . | sha256sum }}
        checksum/cm-zoo-project-config: {{ include (print .Template.BasePath "/cm-zoo-project-config.yaml") . | sha256sum }}
        checksum/cm-openapi-config: {{ include (print .Template.BasePath "/cm-openapi-config.yaml") . | sha256sum }}
      labels:
        {{- include "zoo-project-dru.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: init-wait-for-dependencies-zookernel
          image: docker.io/wshihadeh/wait_for:latest
          imagePullPolicy: IfNotPresent
          command: [ "/docker-entrypoint.sh" ]
          args: [ "wait_for", "rabbitmq:{{ .Release.Name }}-rabbitmq" ]
          env:
            - name: ZOO_RABBITMQ_HOST
              value: {{ .Release.Name }}-rabbitmq
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: zookernel
          command: [ "apachectl" ]
          args: [ "-D", "FOREGROUND" ]
          env:
            - name: ZOO_REDIS_HOST
              value: {{ .Release.Name }}-redis-master
            {{- if .Values.workflow.argo.enabled }}
            - name: STORAGE_CLASS
              value: {{ .Values.workflow.argo.storageClass  }}
            - name: DEFAULT_VOLUME_SIZE
              value: {{ .Values.workflow.argo.defaultVolumeSize }}
            - name: DEFAULT_MAX_CORES
              value: {{ .Values.workflow.argo.defaultMaxCores | toString }}
            - name: DEFAULT_MAX_RAM
              value: {{ .Values.workflow.argo.defaultMaxRam }}
            - name: ARGO_WF_ENDPOINT
              value: {{ .Values.workflow.argo.wfServer }}
            - name: ARGO_WF_TOKEN
              value: {{ .Values.workflow.argo.wfToken }}
            - name: ARGO_WF_SYNCHRONIZATION_CM
              value: {{ .Values.workflow.argo.wfSynchronizationCm }}
            - name: ARGO_CWL_RUNNER_TEMPLATE
              value: {{ .Values.workflow.argo.CwlRunnerTemplare }}
            - name: ARGO_CWL_RUNNER_ENTRYPOINT
              value: {{ .Values.workflow.argo.CwlRunnerEndpoint }}
            {{- end}}
          image: "{{ .Values.zookernel.image.repository }}:{{ .Values.zookernel.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.zookernel.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources: {}
          volumeMounts:
            - name: zoo-project-config
              mountPath: /usr/lib/cgi-bin/main.cfg
              subPath: main.cfg
            - name: zoo-project-config
              mountPath: /usr/lib/cgi-bin/oas.cfg
              subPath: oas.cfg
            - name: zoo-project-config
              mountPath: /var/www/html/.htaccess
              subPath: htaccess
            - name: zoo-project-config
              mountPath: /var/www/html/swagger-ui/oapip/index.html
              subPath: oapi-index.html
            - name: zoo-project-config
              mountPath: /var/www/html/swagger-ui/oapip/swagger-initializer.js
              subPath: swagger-initializer.js
            - name: zoo-project-config
              mountPath: /usr/lib/cgi-bin/security_service.py
              subPath: security_service.py
            {{- if .Values.websocketd.enabled }}
            - name: bin-config
              mountPath: /usr/lib/cgi-bin/publish.py
              subPath: publish.py
            {{- end }}
            - name: zoo-example-config
              mountPath: /var/www/html/examples/post_processes/app-package.cwl
              subPath: app-package.cwl
            - name: zoo-example-config
              mountPath: /var/www/html/examples/post_processes/app-package.json
              subPath: app-package.json
            - name: zoo-example-config
              mountPath: /var/www/html/examples/app-package.cwl
              subPath: app-package.cwl
            - name: zoo-example-config
              mountPath: /var/www/html/examples/app-package.json
              subPath: app-package.json
            - name: zoo-example-config
              mountPath: /var/www/html/examples/processes__processID__execution/job-order1.json
              subPath: job-order1.json
            - name: zoo-example-config
              mountPath: /var/www/html/examples/water-bodies/job-order1.json
              subPath: job-order1.json
            - name: openapi-config
              mountPath: /var/www/header.md
              subPath: header.md
            - name: openapi-config
              mountPath: /var/www/header-secured.md
              subPath: header-secured.md
            - name: openapi-config
              mountPath: /var/www/processes-list.md
              subPath: processes-list.md
            - name: openapi-config
              mountPath: /var/www/deploy.md
              subPath: deploy.md
            - name: openapi-config
              mountPath: /var/www/processes-description.md
              subPath: processes-description.md
            - name: openapi-config
              mountPath: /var/www/execute.md
              subPath: execute.md
            - name: openapi-config
              mountPath: /var/www/job-status.md
              subPath: job-status.md
            - name: openapi-config
              mountPath: /var/www/job-results.md
              subPath: job-results.md
            - name: zoo-deploy-service-config
              mountPath: {{ .Values.persistence.tmpPath }}/cookiecutter_config.yaml
              subPath: cookiecutter_config.yaml
            - name: ades-processing-services
              mountPath: {{ .Values.persistence.servicesNamespacePath }}
            - name: tmp-folder
              mountPath: {{ .Values.persistence.tmpPath }}
            {{- range $v := .Values.zookernel.extraMountPoints }}
            - name: {{ $v.name }}
              mountPath: {{ $v.mountPath }}
              subPath: {{ $v.subPath }}
            {{- end }}
      restartPolicy: Always
      volumes:
        - name: bin-config
          configMap:
            name: {{ .Release.Name }}-bin-config
            defaultMode: 0777
        - name: zoo-project-config
          configMap:
            name: {{ .Release.Name }}-zoo-project-config
        - name: zoo-example-config
          configMap:
            name: {{ .Release.Name }}-zoo-example-config
        - name: openapi-config
          configMap:
            name: {{ .Release.Name }}-openapi-config
        - name: zoo-deploy-service-config
          configMap:
            name: {{ .Release.Name }}-zoo-deploy-service-config
        - name: tmp-folder
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-tmp-folder
        - name: ades-processing-services
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            {{- if .Values.persistence.existingProcessingServicesClaim }}
            claimName: {{ .Values.persistence.existingProcessingServicesClaim }}
            {{- else }}
            claimName: {{ .Release.Name }}-processing-services
            {{- end -}}
          {{- else }}
          emptyDir: { }
          {{- end }}
status: {}