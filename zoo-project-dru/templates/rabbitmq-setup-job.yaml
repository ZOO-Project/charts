{{- if and .Values.rabbitmq.enabled .Values.rabbitmq.autoSetup.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "zoo-project-dru.fullname" . }}-rabbitmq-setup
  labels:
    {{- include "zoo-project-dru.labels" . | nindent 4 }}
    app.kubernetes.io/component: rabbitmq-setup
spec:
  ttlSecondsAfterFinished: 0  # Delete job immediately after completion
  template:
    metadata:
      labels:
        {{- include "zoo-project-dru.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: rabbitmq-setup
    spec:
      restartPolicy: Never
      containers:
      - name: rabbitmq-setup
        image: curlimages/curl:latest
        command:
        - /bin/sh
        - -c
        - |
          set -e
          echo "Waiting for RabbitMQ management API to be ready..."
          
          # Wait for RabbitMQ management interface
          until curl -f -u {{ .Values.rabbitmq.auth.username }}:{{ .Values.rabbitmq.auth.password }} \
            http://{{ include "zoo-project-dru.rabbitmq.serviceName" . }}:15672/api/overview >/dev/null 2>&1; do
            echo "Waiting for RabbitMQ management API..."
            sleep 10
          done
          
          echo "RabbitMQ management API is ready. Importing definitions..."
          
          # Import definitions via HTTP API
          curl -u {{ .Values.rabbitmq.auth.username }}:{{ .Values.rabbitmq.auth.password }} \
            -H "Content-Type: application/json" \
            -X POST \
            -d @/etc/rabbitmq/definitions.json \
            http://{{ include "zoo-project-dru.rabbitmq.serviceName" . }}:15672/api/definitions
          
          echo "Definitions imported successfully!"
        volumeMounts:
        - name: definitions
          mountPath: /etc/rabbitmq/definitions.json
          subPath: load_definition.json
      volumes:
      - name: definitions
        secret:
          secretName: {{ include "zoo-project-dru.fullname" . }}-rabbitmq-definition
{{- end }}
