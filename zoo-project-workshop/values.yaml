# Default values for zoo-project-bids2023-workshop.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

zoo-project-dru:
  zookernel:
    extraMountPoints:
      - name: zoo-example-config
        mountPath: /usr/lib/cgi-bin/s3_read.zcfg
        subPath: s3_read.zcfg
      - name: zoo-example-config
        mountPath: /usr/lib/cgi-bin/s3_download.zcfg
        subPath: s3_download.zcfg
      - name: zoo-example-config
        mountPath: /usr/lib/cgi-bin/s3utils.py
        subPath: s3utils.py
      - name: zoo-example-config
        mountPath: /var/www/.s3cfg
        subPath: s3cfg
      - name: zoo-example-config
        mountPath: /var/www/html/examples/s3_read/job-order1.json
        subPath: job-order2.json
      - name: zoo-example-config
        mountPath: /var/www/html/examples/s3_download/job-order1.json
        subPath: job-order3.json
      - name: zoo-example-config
        mountPath: /var/www/s3_read.md
        subPath: s3_read.md
      - name: zoo-example-config
        mountPath: /var/www/s3_download.md
        subPath: s3_download.md

  persistence:
    enabled: true
    # existingUserDataClaim:
    # existingProcServicesClaim:
    storageClass: standard
    userDataAccessMode: ReadWriteOnce
    userDataSize: 10Gi

    procServicesAccessMode: ReadWriteOnce
    procServicesStorageClass: standard
    procServicesSize: 5Gi
    servicesNamespacePath: /opt/zooservices_user

    tmpAccessMode: ReadWriteMany
    tmpStorageClass: standard
    tmpSize: 2Gi
    tmpPath: /tmp/zTmp
