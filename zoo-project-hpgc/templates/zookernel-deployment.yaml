apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "zoo-project-hpgc.fullname" . }}-zookernel
  labels:
    {{- include "zoo-project-hpgc.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "zoo-project-hpgc.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "zoo-project-hpgc.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: init-wait-for-dependencies-zookernel
          image: docker.io/wshihadeh/wait_for:latest
          imagePullPolicy: IfNotPresent
          command: [ "/docker-entrypoint.sh" ]
          args: [ "wait_for", "rabbitmq:{{ .Release.Name }}-rabbitmq" ]
          env:
            - name: ZOO_RABBITMQ_HOST
              value: {{ .Release.Name }}-rabbitmq
      containers:
        - env:
            - name: ZOO_REDIS_HOST
              value: {{ template "zoo-project-hpgc.fullname" . }}-redis-master
          name: zookernel
          image: "{{ .Values.zookernel.image.repository }}:{{ .Values.zookernel.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.zookernel.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources: {}
          volumeMounts:
            - name: ades-config
              mountPath: /usr/lib/cgi-bin/main.cfg
              subPath: maincfg
            - name: ades-config
              mountPath: /usr/lib/cgi-bin/oas.cfg
              subPath: oas
            - name: ades-config
              mountPath: /var/www/html/.htaccess
              subPath: htaccess
            - name: ades-config
              mountPath: {{ .Values.persistence.tmpPath }}/cookiecutter_config.yaml
              subPath: cookiecutter_config

            - name: ades-config
              mountPath: /assets/additional_inputs.yaml
              subPath: additional_inputs
            - name: ades-config
              mountPath: /assets/pod_env_vars.yaml
              subPath: pod_env_vars
            - name: ades-config
              mountPath: /assets/pod_nodeselectors.yaml
              subPath: pod_nodeselectors
            - name: ades-config
              mountPath: /assets/pod_imagePullSecrets.yaml
              subPath: pod_imagePullSecrets


            - name: ades-processing-services
              mountPath: {{ .Values.persistence.servicesNamespacePath }}
            - name: tmp-folder
              mountPath: {{ .Values.persistence.tmpPath }}
      restartPolicy: Always
      volumes:
        - name: ades-config
          configMap:
            name: {{ template "zoo-project-hpgc.fullname" . }}-configmap
        - name: tmp-folder
          persistentVolumeClaim:
            claimName: {{ template "zoo-project-hpgc.fullname" . }}-tmp-folder
        - name: ades-processing-services
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            {{- if .Values.persistence.existingProcessingServicesClaim }}
            claimName: {{ .Values.persistence.existingProcessingServicesClaim }}
            {{- else }}
            claimName: {{ template "zoo-project-hpgc.fullname" . }}-processing-services
            {{- end -}}
          {{- else }}
          emptyDir: { }
          {{- end }}
status: {}