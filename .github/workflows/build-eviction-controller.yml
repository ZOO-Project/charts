name: Build and Publish eviction-controller Images

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'eviction-controller/**'
      - '.github/workflows/build-eviction-controller.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'eviction-controller/**'
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      force_build:
        description: 'Force build even without changes'
        required: false
        default: 'false'

env:
  REGISTRY: ghcr.io
  ORG_NAME: zoo-project
  IMAGE_NAME: ghcr.io/zoo-project/zoofpm-eviction-controller

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    strategy:
      matrix:
        include:
          - dockerfile: Dockerfile
            context: ./eviction-controller
            platforms: linux/amd64,linux/arm64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            # Branch-based tags
            type=ref,event=branch
            type=ref,event=pr
            # Semantic version tags
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            # Latest tag for main branch
            type=raw,value=latest,enable={{is_default_branch}}
            # SHA-based tag
            type=sha,prefix={{branch}}-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.context }}/${{ matrix.dockerfile }}
          platforms: ${{ matrix.platforms }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
